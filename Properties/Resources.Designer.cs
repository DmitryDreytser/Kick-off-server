//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HTTPServer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HTTPServer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///Language: 1C
        ///Author: Yuri Ivanov &lt;ivanov@supersoft.ru&gt;
        ///Contributors: Sergey Baranov &lt;segyrn@yandex.ru&gt;
        ///Category: enterprise
        ///*/
        ///
        ///hljs.registerLanguage(&apos;1c&apos;,  function(hljs){
        ///  var IDENT_RE_RU = &apos;[a-zA-Z\u0430-\u044f\u0410-\u042f][a-zA-Z0-9_\u0430-\u044f\u0410-\u042f]*&apos;;
        ///  var OneS_KEYWORDS = &apos;\u0432\u043e\u0437\u0432\u0440\u0430\u0442 \u0434\u0430\u0442\u0430 \u0434\u043b\u044f \u0435\u0441\u043b\u0438 \u0438 \u0438\u043b\u0438 \u0438\u043d\u0430\u0447\u0435 \u0438\u043d\u0430\u0447\u0435\u0435\u0441\u043 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _1c {
            get {
                return ResourceManager.GetString("_1c", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] _1C_General {
            get {
                object obj = ResourceManager.GetObject("_1C_General", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // CodeMirror, copyright (c) by Marijn Haverbeke and others
        ///// Distributed under an MIT license: http://codemirror.net/LICENSE
        ///
        ///(function(mod) {
        ///  if (typeof exports == &quot;object&quot; &amp;&amp; typeof module == &quot;object&quot;) // CommonJS
        ///    mod(require(&quot;../../lib/codemirror&quot;));
        ///  else if (typeof define == &quot;function&quot; &amp;&amp; define.amd) // AMD
        ///    define([&quot;../../lib/codemirror&quot;], mod);
        ///  else // Plain browser env
        ///    mod(CodeMirror);
        ///})(function(CodeMirror) {
        ///  var DEFAULT_BRACKETS = &quot;()[]{}&apos;&apos;\&quot;\&quot;&quot;;
        ///  var DEFAULT_EXPLODE_ON_ENTER [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string closebrackets {
            get {
                return ResourceManager.GetString("closebrackets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // CodeMirror, copyright (c) by Marijn Haverbeke and others
        ///// Distributed under an MIT license: http://codemirror.net/LICENSE
        ///
        ///// This is CodeMirror (http://codemirror.net), a code editor
        ///// implemented in JavaScript on top of the browser&apos;s DOM.
        /////
        ///// You can find some technical background for some of the code below
        ///// at http://marijnhaverbeke.nl/blog/#cm-internals .
        ///
        ///(function(mod) {
        ///  if (typeof exports == &quot;object&quot; &amp;&amp; typeof module == &quot;object&quot;) // CommonJS
        ///    module.exports = mod();
        ///  else  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string codemirror {
            get {
                return ResourceManager.GetString("codemirror", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .CodeMirror {
        ///	height: 300px; font-family: monospace; width: auto;
        ///}
        ///.CodeMirror-scroll {
        ///	overflow: auto;
        ///}
        ///.CodeMirror-lines {
        ///	padding: 4px 0px;
        ///}
        ///.CodeMirror pre {
        ///	padding: 0px 4px;
        ///}
        ///.CodeMirror-scrollbar-filler {
        ///	background-color: white;
        ///}
        ///.CodeMirror-gutter-filler {
        ///	background-color: white;
        ///}
        ///.CodeMirror-gutters {
        ///	border-right-color: rgb(221, 221, 221); border-right-width: 1px; border-right-style: solid; white-space: nowrap; background-color: rgb(247, 247, 247);
        ///}
        ///.CodeMirror [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string codemirror_css {
            get {
                return ResourceManager.GetString("codemirror_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///
        ///Original style from softwaremaniacs.org (c) Ivan Sagalaev &lt;Maniac@SoftwareManiacs.Org&gt;
        ///
        ///*/
        ///
        ///.hljs {
        ///  display: block;
        ///  overflow-x: auto;
        ///  padding: 0.5em;
        ///  background: #FFFFFF;
        ///  -webkit-text-size-adjust: none;
        ///  font-family: Courier New;
        ///  font-size: 15px;
        ///  
        ///}
        ///
        /// 
        ///.hljs-string,
        ///.hljs-number,
        ///.hljs-date,
        ///.hljs-subst,
        ///.hljs-tag .hljs-title,
        ///.nginx .hljs-title {
        ///  color: black;
        ///}
        ///
        ///.hljs,
        ///.hljs-title,
        ///.hljs-constant,
        ///.hljs-parent,
        ///.hljs-tag .hljs-value,
        ///.hljs-rules .hljs-value,
        ///.hljs-preprocessor,
        ///.hljs- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string default_css {
            get {
                return ResourceManager.GetString("default_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @font-face {
        ///	font-family: Source Sans Pro;
        ///	src: local(&quot;Source Sans Pro&quot;), local(&quot;SourceSansPro-Regular&quot;), url(//themes.googleusercontent.com/static/fonts/sourcesanspro/v5/ODelI1aHBYDBqgeIAH2zlBM0YzuT7MdOe03otPbuUS0.woff) format(&quot;woff&quot;);
        ///	font-weight: 400;
        ///	font-style: normal;
        ///}
        ///body {
        ///	margin: 0px; padding: 0px; height: 100%;
        ///}
        ///html {
        ///	margin: 0px; padding: 0px; height: 100%;
        ///}
        ///section {
        ///	padding: 0px; display: block;
        ///}
        ///article {
        ///	padding: 0px; display: block;
        ///}
        ///body {
        ///	background: rgb( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string docs_css {
            get {
                return ResourceManager.GetString("docs_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///Syntax highlighting with language autodetection.
        ///https://highlightjs.org/
        ///*/
        ///
        ///(function(factory) {
        ///
        ///  // Setup highlight.js for different environments. First is Node.js or
        ///  // CommonJS.
        ///  if(typeof exports !== &apos;undefined&apos;) {
        ///    factory(exports);
        ///  } else {
        ///    // Export hljs globally even when using AMD for cases when this script
        ///    // is loaded with others that may still expect a global hljs.
        ///    window.hljs = factory({});
        ///
        ///    // Finally register the global hljs with AMD.
        ///    if(typ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string highlight {
            get {
                return ResourceManager.GetString("highlight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! jQuery v1.11.0 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */
        ///!function(a,b){&quot;object&quot;==typeof module&amp;&amp;&quot;object&quot;==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(&quot;jQuery requires a window with a document&quot;);return b(a)}:b(a)}(&quot;undefined&quot;!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k=&quot;&quot;.trim,l={},m=&quot;1.11.0&quot;,n=function(a,b){return new n.fn.init(a,b)},o=/^[\ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery {
            get {
                return ResourceManager.GetString("jquery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///    json2.js
        ///    2014-02-04
        ///
        ///    Public Domain.
        ///
        ///    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
        ///
        ///    See http://www.JSON.org/js.html
        ///
        ///
        ///    This code should be minified before deployment.
        ///    See http://javascript.crockford.com/jsmin.html
        ///
        ///    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO
        ///    NOT CONTROL.
        ///
        ///
        ///    This file creates a global JSON object containing two methods: stringify
        ///    and parse.
        ///
        ///        JSON.stringify(value, replacer, space)
        ///            value   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string json2 {
            get {
                return ResourceManager.GetString("json2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // CodeMirror, copyright (c) by Marijn Haverbeke and others
        ///// Distributed under an MIT license: http://codemirror.net/LICENSE
        ///
        ///(function(mod) {
        ///  if (typeof exports == &quot;object&quot; &amp;&amp; typeof module == &quot;object&quot;) // CommonJS
        ///    mod(require(&quot;../../lib/codemirror&quot;));
        ///  else if (typeof define == &quot;function&quot; &amp;&amp; define.amd) // AMD
        ///    define([&quot;../../lib/codemirror&quot;], mod);
        ///  else // Plain browser env
        ///    mod(CodeMirror);
        ///})(function(CodeMirror) {
        ///  var ie_lt8 = /MSIE \d/.test(navigator.userAgent) &amp;&amp;
        ///    (document.doc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string matchbrackets {
            get {
                return ResourceManager.GetString("matchbrackets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function logoptionsselect()
        ///{
        ///var logdata = [
        ///[&apos;Refs&apos;,&apos;&apos;,&apos;Все&apos;],
        ///[&apos;Refs&apos;,&apos;RefOpen&apos;,&apos;Открыт&apos;],
        ///[&apos;Refs&apos;,&apos;RefWrite&apos;,&apos;Записан&apos;],
        ///[&apos;Refs&apos;,&apos;RefNew&apos;,&apos;Создан&apos;],
        ///[&apos;Refs&apos;,&apos;RefMarkDel&apos;,&apos;Помечен на удаление&apos;],
        ///[&apos;Refs&apos;,&apos;RefUnmarkDel&apos;,&apos;Снята пометка удаления&apos;],
        ///[&apos;Refs&apos;,&apos;RefDel&apos;,&apos;Удален&apos;],
        ///[&apos;Refs&apos;,&apos;RefGrpMove&apos;,&apos;Перенесен в другую группу&apos;],
        ///[&apos;Refs&apos;,&apos;RefAttrWrite&apos;,&apos;Значение реквизита записано&apos;],
        ///[&apos;Refs&apos;,&apos;RefAttrDel&apos;,&apos;Значение реквизита удалено&apos;],
        ///
        ///[&apos;Docs&apos;,&apos;&apos;,&apos;Все&apos;],
        ///[&apos;Docs&apos;,&apos;DocNew&apos;,&apos;Cоздан&apos;],
        ///[&apos;Docs&apos;,&apos;DocOp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string mlgparse {
            get {
                return ResourceManager.GetString("mlgparse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // CodeMirror, copyright (c) by Marijn Haverbeke and others
        ///// Distributed under an MIT license: http://codemirror.net/LICENSE
        ///
        ///(function(mod) {
        ///  if (typeof exports == &quot;object&quot; &amp;&amp; typeof module == &quot;object&quot;) // CommonJS
        ///    mod(require(&quot;../../lib/codemirror&quot;));
        ///  else if (typeof define == &quot;function&quot; &amp;&amp; define.amd) // AMD
        ///    define([&quot;../../lib/codemirror&quot;], mod);
        ///  else // Plain browser env
        ///    mod(CodeMirror);
        ///})(function(CodeMirror) {
        ///  &quot;use strict&quot;;
        ///
        ///  var HINT_ELEMENT_CLASS        = &quot;CodeMirror-hint&quot;;
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string show_hint {
            get {
                return ResourceManager.GetString("show_hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .CodeMirror-hints {
        ///  position: absolute;
        ///  z-index: 10;
        ///  overflow: hidden;
        ///  list-style: none;
        ///
        ///  margin: 0;
        ///  padding: 2px;
        ///
        ///  -webkit-box-shadow: 2px 3px 5px rgba(0,0,0,.2);
        ///  -moz-box-shadow: 2px 3px 5px rgba(0,0,0,.2);
        ///  box-shadow: 2px 3px 5px rgba(0,0,0,.2);
        ///  border-radius: 3px;
        ///  border: 1px solid silver;
        ///
        ///  background: white;
        ///  font-size: 90%;
        ///  font-family: monospace;
        ///
        ///  max-height: 20em;
        ///  overflow-y: auto;
        ///}
        ///
        ///.CodeMirror-hint {
        ///  margin: 0;
        ///  padding: 0 4px;
        ///  border-radius: 2px;
        ///  max-width:  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string show_hint_css {
            get {
                return ResourceManager.GetString("show_hint_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // CodeMirror, copyright (c) by Marijn Haverbeke and others
        ///// Distributed under an MIT license: http://codemirror.net/LICENSE
        ///
        ///(function(mod) {
        ///  if (typeof exports == &quot;object&quot; &amp;&amp; typeof module == &quot;object&quot;) // CommonJS
        ///      mod(require(&quot;/resources/codemirror&quot;));
        ///  else if (typeof define == &quot;function&quot; &amp;&amp; define.amd) // AMD
        ///      define([&quot;/resources/codemirror&quot;], mod);
        ///  else // Plain browser env
        ///    mod(CodeMirror);
        ///})(function(CodeMirror) {
        ///&quot;use strict&quot;;
        ///
        ///CodeMirror.defineMode(&quot;sql&quot;, function(config, pars [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sql {
            get {
                return ResourceManager.GetString("sql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // CodeMirror, copyright (c) by Marijn Haverbeke and others
        ///// Distributed under an MIT license: http://codemirror.net/LICENSE
        ///
        ///(function(mod) {
        ///  if (typeof exports == &quot;object&quot; &amp;&amp; typeof module == &quot;object&quot;) // CommonJS
        ///      mod(require(&quot;/resources/codemirror&quot;), require(&quot;/resources/sql&quot;));
        ///  else if (typeof define == &quot;function&quot; &amp;&amp; define.amd) // AMD
        ///      define([&quot;/resources/codemirror&quot;, &quot;/resources/sql&quot;], mod);
        ///  else // Plain browser env
        ///    mod(CodeMirror);
        ///})(function(CodeMirror) {
        ///  &quot;use strict&quot;;
        ///
        ///  v [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sql_hint {
            get {
                return ResourceManager.GetString("sql_hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap top_rlogo {
            get {
                object obj = ResourceManager.GetObject("top_rlogo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //     Underscore.js 1.5.0
        /////     http://underscorejs.org
        /////     (c) 2009-2011 Jeremy Ashkenas, DocumentCloud Inc.
        /////     (c) 2011-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters &amp; Editors
        /////     Underscore may be freely distributed under the MIT license.
        ///!function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,v=e.reduce,h=e.reduceRight,d=e.filter,g=e.every,m=e.some,y=e.index [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string underscore {
            get {
                return ResourceManager.GetString("underscore", resourceCulture);
            }
        }
    }
}
